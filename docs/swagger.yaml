basePath: /
definitions:
  AssignRoleToUserRequest:
    properties:
      role_id:
        example: 14
        type: integer
    type: object
  AuthResponse:
    properties:
      access_token:
        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aW.xkZXIiLCJpYXQiOjE3MjE4N
        type: string
      refresh_token:
        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJPbmxpbmUgSldUIEJ1aW.xkZXIiLCJpYXQiOjE3MjE4N
        type: string
      type:
        example: Bearer
        type: string
    type: object
  BudgetCreateRequest:
    properties:
      amount:
        example: 10.25
        type: number
      category_slug:
        example: test-category
        type: string
      title:
        example: New car
        type: string
      type:
        example: income
        type: string
      user_id:
        example: 12
        type: integer
    type: object
  BudgetResponse:
    properties:
      amount:
        example: 1000
        type: number
      id:
        example: 10
        type: integer
      title:
        example: New budget
        type: string
      type:
        example: income
        type: string
      user_id:
        example: 10
        type: integer
    type: object
  BudgetUpdateRequest:
    properties:
      amount:
        example: 10.25
        type: number
      title:
        example: New car
        type: string
      type:
        example: income
        type: string
      user_id:
        example: 12
        type: integer
    type: object
  BudgetsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/BudgetResponse'
        type: array
    type: object
  CategoriesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/CategoryResponse'
        type: array
    type: object
  CategoryRequest:
    properties:
      name:
        example: Transport
        type: string
    type: object
  CategoryResponse:
    properties:
      name:
        example: Transport
        type: string
      type:
        example: income|expense
        type: string
    type: object
  Error:
    properties:
      message:
        example: Something went wrong try again later!
        type: string
    type: object
  PermissionsResponse:
    properties:
      data:
        example:
        - prefix_create
        - prefix_read
        - '...'
        items:
          type: string
        type: array
    type: object
  Role:
    properties:
      display_title:
        example: UserTitle
        type: string
      permissions:
        example:
        - prefix_create
        - prefix_read
        items:
          type: string
        type: array
    type: object
  RoleResponse:
    properties:
      display_title:
        example: UserTitle
        type: string
      id:
        example: 12
        type: integer
      permissions:
        items:
          $ref: '#/definitions/PermissionsResponse'
        type: array
      title:
        example: RoleTitle
        type: string
    type: object
  RolesResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/RoleResponse'
        type: array
    type: object
  SignInRequest:
    properties:
      email:
        example: john.doe@example.com
        type: string
      password:
        example: qwerty
        type: string
    type: object
  SignUpRequest:
    properties:
      email:
        example: john.doe@example.com
        type: string
      id:
        example: 14
        type: integer
      name:
        example: John Doe
        type: string
      password:
        example: qwerty
        type: string
      password_confirmation:
        example: qwerty
        type: string
    type: object
  Status:
    properties:
      status:
        example: Everything is OK
        type: string
    type: object
  UserResponse:
    properties:
      email:
        example: jon_doe@gmail.com
        type: string
      id:
        example: 14
        type: integer
      name:
        example: Jon Doe
        type: string
      role:
        $ref: '#/definitions/RoleResponse'
      tg_id:
        example: 131231231231323
        type: integer
    type: object
  UserUpdateRequest:
    properties:
      email:
        example: jon_doe@gmail.com
        type: string
      name:
        example: Jon Doe
        type: string
      password:
        example: qwerty
        type: string
      tg_id:
        example: 131231231231323
        type: integer
    type: object
host: localhost:8080/api
info:
  contact: {}
  description: API for income and expense applications that allows you to receive
    a report for a certain period
  title: Expense Application
  version: "1.0"
paths:
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Method that logout user on server side
      operationId: auth-logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - Auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Method that return new pair of access and refresh token
      operationId: auth-refresh-token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthResponse'
      security:
      - ApiKeyAuth: []
      summary: RefreshToken
      tags:
      - Auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Method allow to enter into account
      operationId: auth-enter-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/SignInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthResponse'
      summary: SignIn
      tags:
      - Auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Method allow to create account
      operationId: auth-create-account
      parameters:
      - description: account info
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AuthResponse'
      summary: SignUp
      tags:
      - Auth
  /budgets:
    get:
      consumes:
      - application/json
      description: Method that return list of budgets
      operationId: get-budgets
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BudgetsResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Budgets
    post:
      consumes:
      - application/json
      description: Method that store budget
      operationId: store-budgets
      parameters:
      - description: Budget form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/BudgetCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth: []
      tags:
      - Budgets
  /budgets/{id}:
    delete:
      consumes:
      - application/json
      description: Method that allow to delete budget by ID
      operationId: delete-budgets
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth: []
      tags:
      - Budgets
    get:
      consumes:
      - application/json
      description: Method that return budget by ID
      operationId: get-budget
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BudgetResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Budgets
    put:
      consumes:
      - application/json
      description: Method that allow to update budget by ID
      operationId: update-budgets
      parameters:
      - description: Budget ID
        in: path
        name: id
        required: true
        type: integer
      - description: Budget form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/BudgetUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth: []
      tags:
      - Budgets
  /categories:
    get:
      consumes:
      - application/json
      description: Method that return list of categories
      operationId: categories-get
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CategoriesResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Categories
    post:
      consumes:
      - application/json
      description: Method that store category
      operationId: categories-store
      parameters:
      - description: CategoryRequest form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth:
        - admin
      tags:
      - Categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: Method that delete category by ID
      operationId: categories-delete
      parameters:
      - description: CategoryRequest ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth:
        - admin
      tags:
      - Categories
    get:
      consumes:
      - application/json
      description: Method that return category by id
      operationId: category-get
      parameters:
      - description: CategoryRequest ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/CategoryResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Categories
    put:
      consumes:
      - application/json
      description: Method that update category by ID
      operationId: categories-update
      parameters:
      - description: CategoryRequest ID
        in: path
        name: id
        required: true
        type: integer
      - description: CategoryRequest form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/CategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth:
        - admin
      tags:
      - Categories
  /reports/pdf:
    get:
      consumes:
      - application/json
      description: Method for generation PDF report
      operationId: reports-pdf
      produces:
      - multipart/form-data
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth: []
      tags:
      - Reports
  /reports/xlsx:
    get:
      consumes:
      - application/json
      description: Method for generation XLSX report
      operationId: reports-xlsx
      produces:
      - multipart/form-data
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth: []
      tags:
      - Reports
  /roles:
    get:
      consumes:
      - application/json
      description: Method that return list of roles
      operationId: get-roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RolesResponse'
      security:
      - ApiKeyAuth:
        - admin
      tags:
      - Roles
    post:
      consumes:
      - application/json
      description: Method that store role
      operationId: store-roles
      parameters:
      - description: Role form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth:
        - admin
      tags:
      - Roles
  /roles/{id}:
    delete:
      consumes:
      - application/json
      description: Method that allow to delete role by ID
      operationId: delete-roles
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth:
        - admin
      tags:
      - Roles
    get:
      consumes:
      - application/json
      description: Method that return role by ID
      operationId: get-role
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RoleResponse'
      security:
      - ApiKeyAuth:
        - admin
      tags:
      - Roles
    put:
      consumes:
      - application/json
      description: Method that allow to update role by ID
      operationId: update-roles
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Role form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/Error'
      security:
      - ApiKeyAuth:
        - admin
      tags:
      - Roles
  /roles/permissions:
    get:
      consumes:
      - application/json
      description: Method that return list of permissions
      operationId: get-permissions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PermissionsResponse'
      security:
      - ApiKeyAuth:
        - admin
      tags:
      - Roles
  /users/:id/assign-role:
    put:
      consumes:
      - application/json
      description: Method that return list of permissions
      operationId: assign-role-to-users
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Role form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/AssignRoleToUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth:
        - admin
      tags:
      - Roles
  /users/{id}:
    put:
      consumes:
      - application/json
      description: Method allow to update users
      operationId: users-update
      parameters:
      - description: Users ID
        in: path
        name: id
        required: true
        type: integer
      - description: User form
        in: body
        name: form
        required: true
        schema:
          $ref: '#/definitions/UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Status'
      security:
      - ApiKeyAuth: []
      tags:
      - Users
  /users/current:
    get:
      consumes:
      - application/json
      description: Method allow to get current user
      operationId: users-current
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserResponse'
      security:
      - ApiKeyAuth: []
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
